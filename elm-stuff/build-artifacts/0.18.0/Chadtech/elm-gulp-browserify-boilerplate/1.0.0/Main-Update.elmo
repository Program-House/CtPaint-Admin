var _Chadtech$elm_gulp_browserify_boilerplate$Main_Update$update = F2(
	function (message, model) {
		var _p0 = message;
		switch (_p0.ctor) {
			case 'SetPage':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{
							page: A2(_Chadtech$elm_gulp_browserify_boilerplate$Main_SetPage$handle, _p0._0, model.page)
						}),
					{ctor: '[]'});
			case 'GetServersPublicKey':
				if (_p0._0.ctor === 'Ok') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						model,
						{
							ctor: '::',
							_0: _Chadtech$elm_gulp_browserify_boilerplate$Ports$saveServersKey(_p0._0._0),
							_1: {ctor: '[]'}
						});
				} else {
					var _p1 = A2(_elm_lang$core$Debug$log, 'ERROR', _p0._0._0);
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						model,
						{
							ctor: '::',
							_0: _Chadtech$elm_gulp_browserify_boilerplate$Api_PublicKey$get,
							_1: {ctor: '[]'}
						});
				}
			case 'SignInWrapper':
				var _p2 = model.page;
				if (_p2.ctor === 'SignInPage') {
					return A3(_Chadtech$elm_gulp_browserify_boilerplate$SignIn_Update$update, _p0._0, _p2._0, model);
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'SignInResult':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{
							page: _Chadtech$elm_gulp_browserify_boilerplate$Main_Types$UsersPage(_Chadtech$elm_gulp_browserify_boilerplate$User_Model$init)
						}),
					{
						ctor: '::',
						_0: _Chadtech$elm_gulp_browserify_boilerplate$Ports$setUsername(_p0._0),
						_1: {ctor: '[]'}
					});
			default:
				var _p3 = model.page;
				if (_p3.ctor === 'UsersPage') {
					return A3(_Chadtech$elm_gulp_browserify_boilerplate$User_Update$update, _p0._0, _p3._0, model);
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
		}
	});
